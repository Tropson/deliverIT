//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClientMVC.SenderServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SenderServiceReference1.ISenderService")]
    public interface ISenderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddSender", ReplyAction="http://tempuri.org/ISenderService/AddSenderResponse")]
        int AddSender(DeliveryService.UserModel sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddSender", ReplyAction="http://tempuri.org/ISenderService/AddSenderResponse")]
        System.Threading.Tasks.Task<int> AddSenderAsync(DeliveryService.UserModel sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllUsers", ReplyAction="http://tempuri.org/ISenderService/GetAllUsersResponse")]
        DeliveryService.UserModel[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllUsers", ReplyAction="http://tempuri.org/ISenderService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<DeliveryService.UserModel[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddApplication", ReplyAction="http://tempuri.org/ISenderService/AddApplicationResponse")]
        int AddApplication(DeliveryService.ApplicationModel application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddApplication", ReplyAction="http://tempuri.org/ISenderService/AddApplicationResponse")]
        System.Threading.Tasks.Task<int> AddApplicationAsync(DeliveryService.ApplicationModel application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllApplications", ReplyAction="http://tempuri.org/ISenderService/GetAllApplicationsResponse")]
        DeliveryService.ApplicationModel[] GetAllApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllApplications", ReplyAction="http://tempuri.org/ISenderService/GetAllApplicationsResponse")]
        System.Threading.Tasks.Task<DeliveryService.ApplicationModel[]> GetAllApplicationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddCourier", ReplyAction="http://tempuri.org/ISenderService/AddCourierResponse")]
        int AddCourier(DeliveryService.UserModel courier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddCourier", ReplyAction="http://tempuri.org/ISenderService/AddCourierResponse")]
        System.Threading.Tasks.Task<int> AddCourierAsync(DeliveryService.UserModel courier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/DeleteApplication", ReplyAction="http://tempuri.org/ISenderService/DeleteApplicationResponse")]
        int DeleteApplication(DeliveryService.ApplicationModel application, bool deletePerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/DeleteApplication", ReplyAction="http://tempuri.org/ISenderService/DeleteApplicationResponse")]
        System.Threading.Tasks.Task<int> DeleteApplicationAsync(DeliveryService.ApplicationModel application, bool deletePerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/ClearDB", ReplyAction="http://tempuri.org/ISenderService/ClearDBResponse")]
        void ClearDB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/ClearDB", ReplyAction="http://tempuri.org/ISenderService/ClearDBResponse")]
        System.Threading.Tasks.Task ClearDBAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetBalanceByUsername", ReplyAction="http://tempuri.org/ISenderService/GetBalanceByUsernameResponse")]
        int GetBalanceByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetBalanceByUsername", ReplyAction="http://tempuri.org/ISenderService/GetBalanceByUsernameResponse")]
        System.Threading.Tasks.Task<int> GetBalanceByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddToBalance", ReplyAction="http://tempuri.org/ISenderService/AddToBalanceResponse")]
        void AddToBalance(string username, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddToBalance", ReplyAction="http://tempuri.org/ISenderService/AddToBalanceResponse")]
        System.Threading.Tasks.Task AddToBalanceAsync(string username, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/UseVoucher", ReplyAction="http://tempuri.org/ISenderService/UseVoucherResponse")]
        void UseVoucher(string username, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/UseVoucher", ReplyAction="http://tempuri.org/ISenderService/UseVoucherResponse")]
        System.Threading.Tasks.Task UseVoucherAsync(string username, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllVouchers", ReplyAction="http://tempuri.org/ISenderService/GetAllVouchersResponse")]
        DeliveryService.VoucherModel[] GetAllVouchers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllVouchers", ReplyAction="http://tempuri.org/ISenderService/GetAllVouchersResponse")]
        System.Threading.Tasks.Task<DeliveryService.VoucherModel[]> GetAllVouchersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllUsedVouchers", ReplyAction="http://tempuri.org/ISenderService/GetAllUsedVouchersResponse")]
        DeliveryService.VouchersUsedModel[] GetAllUsedVouchers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllUsedVouchers", ReplyAction="http://tempuri.org/ISenderService/GetAllUsedVouchersResponse")]
        System.Threading.Tasks.Task<DeliveryService.VouchersUsedModel[]> GetAllUsedVouchersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllPackages", ReplyAction="http://tempuri.org/ISenderService/GetAllPackagesResponse")]
        DeliveryService.PackageModel[] GetAllPackages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetAllPackages", ReplyAction="http://tempuri.org/ISenderService/GetAllPackagesResponse")]
        System.Threading.Tasks.Task<DeliveryService.PackageModel[]> GetAllPackagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetDeliveryByPackageBarcode", ReplyAction="http://tempuri.org/ISenderService/GetDeliveryByPackageBarcodeResponse")]
        DeliveryService.DeliveryModel GetDeliveryByPackageBarcode(double barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/GetDeliveryByPackageBarcode", ReplyAction="http://tempuri.org/ISenderService/GetDeliveryByPackageBarcodeResponse")]
        System.Threading.Tasks.Task<DeliveryService.DeliveryModel> GetDeliveryByPackageBarcodeAsync(double barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddPackage", ReplyAction="http://tempuri.org/ISenderService/AddPackageResponse")]
        int AddPackage(DeliveryService.PackageModel model, string Username, DeliveryService.DeliveryModel delivery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISenderService/AddPackage", ReplyAction="http://tempuri.org/ISenderService/AddPackageResponse")]
        System.Threading.Tasks.Task<int> AddPackageAsync(DeliveryService.PackageModel model, string Username, DeliveryService.DeliveryModel delivery);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISenderServiceChannel : WebClientMVC.SenderServiceReference1.ISenderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SenderServiceClient : System.ServiceModel.ClientBase<WebClientMVC.SenderServiceReference1.ISenderService>, WebClientMVC.SenderServiceReference1.ISenderService {
        
        public SenderServiceClient() {
        }
        
        public SenderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SenderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SenderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SenderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddSender(DeliveryService.UserModel sender) {
            return base.Channel.AddSender(sender);
        }
        
        public System.Threading.Tasks.Task<int> AddSenderAsync(DeliveryService.UserModel sender) {
            return base.Channel.AddSenderAsync(sender);
        }
        
        public DeliveryService.UserModel[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<DeliveryService.UserModel[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public int AddApplication(DeliveryService.ApplicationModel application) {
            return base.Channel.AddApplication(application);
        }
        
        public System.Threading.Tasks.Task<int> AddApplicationAsync(DeliveryService.ApplicationModel application) {
            return base.Channel.AddApplicationAsync(application);
        }
        
        public DeliveryService.ApplicationModel[] GetAllApplications() {
            return base.Channel.GetAllApplications();
        }
        
        public System.Threading.Tasks.Task<DeliveryService.ApplicationModel[]> GetAllApplicationsAsync() {
            return base.Channel.GetAllApplicationsAsync();
        }
        
        public int AddCourier(DeliveryService.UserModel courier) {
            return base.Channel.AddCourier(courier);
        }
        
        public System.Threading.Tasks.Task<int> AddCourierAsync(DeliveryService.UserModel courier) {
            return base.Channel.AddCourierAsync(courier);
        }
        
        public int DeleteApplication(DeliveryService.ApplicationModel application, bool deletePerson) {
            return base.Channel.DeleteApplication(application, deletePerson);
        }
        
        public System.Threading.Tasks.Task<int> DeleteApplicationAsync(DeliveryService.ApplicationModel application, bool deletePerson) {
            return base.Channel.DeleteApplicationAsync(application, deletePerson);
        }
        
        public void ClearDB() {
            base.Channel.ClearDB();
        }
        
        public System.Threading.Tasks.Task ClearDBAsync() {
            return base.Channel.ClearDBAsync();
        }
        
        public int GetBalanceByUsername(string username) {
            return base.Channel.GetBalanceByUsername(username);
        }
        
        public System.Threading.Tasks.Task<int> GetBalanceByUsernameAsync(string username) {
            return base.Channel.GetBalanceByUsernameAsync(username);
        }
        
        public void AddToBalance(string username, int amount) {
            base.Channel.AddToBalance(username, amount);
        }
        
        public System.Threading.Tasks.Task AddToBalanceAsync(string username, int amount) {
            return base.Channel.AddToBalanceAsync(username, amount);
        }
        
        public void UseVoucher(string username, string code) {
            base.Channel.UseVoucher(username, code);
        }
        
        public System.Threading.Tasks.Task UseVoucherAsync(string username, string code) {
            return base.Channel.UseVoucherAsync(username, code);
        }
        
        public DeliveryService.VoucherModel[] GetAllVouchers() {
            return base.Channel.GetAllVouchers();
        }
        
        public System.Threading.Tasks.Task<DeliveryService.VoucherModel[]> GetAllVouchersAsync() {
            return base.Channel.GetAllVouchersAsync();
        }
        
        public DeliveryService.VouchersUsedModel[] GetAllUsedVouchers() {
            return base.Channel.GetAllUsedVouchers();
        }
        
        public System.Threading.Tasks.Task<DeliveryService.VouchersUsedModel[]> GetAllUsedVouchersAsync() {
            return base.Channel.GetAllUsedVouchersAsync();
        }
        
        public DeliveryService.PackageModel[] GetAllPackages() {
            return base.Channel.GetAllPackages();
        }
        
        public System.Threading.Tasks.Task<DeliveryService.PackageModel[]> GetAllPackagesAsync() {
            return base.Channel.GetAllPackagesAsync();
        }
        
        public DeliveryService.DeliveryModel GetDeliveryByPackageBarcode(double barcode) {
            return base.Channel.GetDeliveryByPackageBarcode(barcode);
        }
        
        public System.Threading.Tasks.Task<DeliveryService.DeliveryModel> GetDeliveryByPackageBarcodeAsync(double barcode) {
            return base.Channel.GetDeliveryByPackageBarcodeAsync(barcode);
        }
        
        public int AddPackage(DeliveryService.PackageModel model, string Username, DeliveryService.DeliveryModel delivery) {
            return base.Channel.AddPackage(model, Username, delivery);
        }
        
        public System.Threading.Tasks.Task<int> AddPackageAsync(DeliveryService.PackageModel model, string Username, DeliveryService.DeliveryModel delivery) {
            return base.Channel.AddPackageAsync(model, Username, delivery);
        }
    }
}
